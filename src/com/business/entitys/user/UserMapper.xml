<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "mybatis-3-mapper.dtd">
<mapper namespace="user">
	<resultMap type="user" id="userMap">
		<id property="userId" column="userId" />
		<result property="passWord" column="passWord" />
		<result property="createTime" column="createTime" />
		<result property="type" column="type" />
		<result property="userName" column="userName" />
		<result property="Email" column="Email" />
		<result property="openId" column="openId" />
		<result property="phone" column="phone" />
		<result property="addRess" column="addRess" />
		<result property="integral" column="integral" />
		<result property="Grade" column="Grade" />
		<result property="userStatus" column="userStatus" />
		<result property="idCard" column="idCard" />
		<result property="rdCode" column="rdCode" />
		<result property="answer" column="answer" />
		<result property="idImage" column="idImage" />

		<collection property="mpUserEntity" ofType="mpUser">
			<id property="openid" column="openid" />
			<result property="nickname" column="nickname" />
			<result property="sex" column="sex" />
			<result property="province" column="province" />
			<result property="city" column="city" />
			<result property="country" column="country" />
			<result property="headimgurl" column="headimgurl" />
			<result property="privilege" column="privilege" />
			<result property="unionid" column="unionid" />

		</collection>
	</resultMap>
	<insert id="addUser" parameterType="user" keyProperty="userId"
		useGeneratedKeys="true">
		insert into
		`user`(
		`passWord`,`type`,`userName`,
		`Email`,`openId`,`phone`,
		`addRess`,`integral`,`Grade`,
		`userStatus`,`idCard`,`rdCode`,`answer`,`idImage`)
		values(
		#{passWord},#{type},#{userName},
		#{Email},#{openId},#{phone},
		#{addRess},#{integral},#{Grade},
		#{userStatus},#{idCard},#{rdCode},#{answer},#{idImage}
		)

	</insert>
	<select id="selectRdCode" parameterType="String" resultType="user">
		select * from `user` where `rdCode`=#{String}
	</select>
	<select id="selectById" parameterType="int" resultType="user">
		select *
		from `user` where `userId`=#{int}
	</select>

	<select id="selectByIdCard" parameterType="com.business.entitys.user.UserBuyTemp"
		resultType="user">
		SELECT * FROM `user` AS u
		WHERE u.`userId` = (
		SELECT
		of.`userId` FROM `orderform`AS of
		WHERE of.`orderSerialNumber`
		=#{orderSerialNumber}
		)
		AND u.`idCard` LIKE CONCAT('%',#{idCard})
	</select>
	<update id="updateByid" parameterType="user">
		update `user`
		set
		`passWord`=#{passWord},
		`type`=#{type},
		`userName`=#{userName},
		`Email`=#{Email},
		`openId`=#{openId},
		`phone`=#{phone},
		`addRess`=#{addRess},
		`integral`=#{integral},
		`Grade`=#{Grade},
		`userStatus`=#{userStatus},
		`idCard`=#{idCard},
		`rdCode`=#{rdCode},
		`answer`=#{answer}
		where
		`userId`=#{userId}

	</update>
	<select id="selectUserByWhere" parameterType="map" resultMap="userMap">
		select * from `user` as us
		left JOIN `mpuserentity` as mt on
		mt.`openid`=us.`openId`
		where 1=1
		<if test="getUserDataByOpenId!=null">
			and us.`openId`=#{findOpenId}
		</if>
		<if test="haveGoodsIdUser!=null">
			and us.`userId` IN (
			SELECT st.userId FROM `servicetime` AS
			st
			WHERE st.`goodsId`=#{haveGoodsId} and st.`serviceDay` &gt; 0
			)
		</if>
		<if test="findOpenIdToService!=null">
			and us.`openId`=#{findOpenId} and us.`userid` in
			(
			select
			`userId` from `servicetime` as st
			where st.`serviceDay` &gt; 0 and
			us.`userId` =st.`userId`
			)
		</if>
		<if test="findUserByIdcard!=null">
			and us.`idCard`=#{findIdcard}
		</if>
	</select>
	<delete id="delete" parameterType="int">
		DELETE FROM `user` where
		`userId`=#{int}
	</delete>
	<select id="selectHaveGoodsIdUser" parameterType="int"
		resultMap="userMap">
		SELECT * FROM `user` AS us
		WHERE us.`userId` IN (
		SELECT
		st.userId FROM `servicetime` AS st
		WHERE
		st.`goodsId`='10038'
		)

	</select>
</mapper>