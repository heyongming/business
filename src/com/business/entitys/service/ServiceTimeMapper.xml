<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "mybatis-3-mapper.dtd">
<mapper namespace="service">
	<resultMap type="ServiceTime" id="ServiceTimeMap">
		<id property="id" column="id" />
		<result property="serviceDay" column="serviceDay" />
		<result property="goodsId" column="goodsId" />
		<result property="ServiceTime" column="ServiceTime" />
		<result property="userId" column="userId" />
		<result property="agreement" column="agreement" />
		<result property="realAgreement" column="realAgreement" />
		<result property="isActivation" column="isActivation" />



		<collection property="goodsList" ofType="goodsList">

			<id property="goodsId" column="goodsId" />
			<result property="goodsPrice" column="goodsPrice" />
			<result property="dateManufacture" column="dateManufacture" />
			<result property="goodsName" column="goodsName" />
			<result property="imageUrl" column="imageUrl" />
			<result property="inventory" column="inventory" />
			<result property="salesVolume" column="salesVolume" />
			<result property="isShelves" column="isShelves" />
			<result property="weight" column="weight" />
			<result property="effectiveTime" column="effectiveTime" />
			<result property="minMon" column="minMon" />
			<result property="maxMon" column="maxMon" />
			<result property="isBlend" column="isBlend" />

		</collection>
		<collection property="user" ofType="user">

			<id property="userId" column="userId" />
			<result property="passWord" column="passWord" />
			<result property="createTime" column="createTime" />
			<result property="type" column="type" />
			<result property="userName" column="userName" />
			<result property="Email" column="Email" />
			<result property="openId" column="openId" />
			<result property="phone" column="phone" />
			<result property="addRess" column="addRess" />
			<result property="integral" column="integral" />
			<result property="Grade" column="Grade" />
			<result property="userStatus" column="userStatus" />
			<result property="idCard" column="idCard" />
			<result property="rdCode" column="rdCode" />
			<result property="answer" column="answer" />
			<result property="idImage" column="idImage" />
			<collection property="mpUserEntity" ofType="mpUser">
				<id property="openid" column="openid" />
				<result property="nickname" column="nickname" />
				<result property="sex" column="sex" />
				<result property="province" column="province" />
				<result property="city" column="city" />
				<result property="country" column="country" />
				<result property="headimgurl" column="headimgurl" />
				<result property="privilege" column="privilege" />
				<result property="unionid" column="unionid" />

			</collection>
		</collection>


	</resultMap>
	<insert id="insertServiceTime" parameterType="serviceTime"
		keyProperty="id" useGeneratedKeys="true">
		insert into serviceTime
		(`serviceDay`,`goodsId`,`userId`,`isActivation`)
		values(#{serviceDay},#{goodsId},#{userId},#{isActivation})
	</insert>
	<update id="updateServiceTime" parameterType="serviceTime">
		update
		`serviceTime`
		set
		`serviceDay`=#{serviceDay},
		`goodsId`=#{goodsId},
		`userId`=#{userId},
		`agreement`=#{agreement},
		`realAgreement`=#{realAgreement},
		`isActivation`=#{isActivation}
		where
		`id`=#{id}
	</update>
	<select id="selectBywehre" parameterType="map" resultMap="ServiceTimeMap">
		select
		* from `serviceTime` as st
		INNER JOIN goodsList as gl on
		st.goodsId=gl.goodsId
		INNER JOIN `user` as us on
		us.`userId`=st.`userId`
		left join `mpuserentity` as mpy on 
		us.`openId`=mpy.`openid`
		where 1=1
		<if test="serviceUserId!=null">
			and st.`userId`=#{serviceUserId}
		</if>
		<if test="serviceGoodsId!=null">
			and st.`goodsId`=#{serviceGoodsId}
			and st.`isActivation`=1
		</if>
		<if test="pdfUserId!=null">
			and st.`goodsId`=#{pdfGoodsId} and
			st.`userId`=#{pdfUserId}
		</if>
		<if test="serviceGoodsIdList!=null">
			and st.`userId`=#{serviceUserId} and st.`isActivation`=1
			and st.`serviceDay`>0
		</if>
		<if test="findKey!=null">
			and st.`id`=#{findId}
		</if>

	</select>
	<update id="updateBySubService">
		update
		`serviceTime`
		set
		`serviceDay`=`serviceDay`-1
		where `serviceDay`>0 and `isActivation`=1
	</update>
	<delete id="delete" parameterType="int">
		delete from `serviceTime`
		where `id`=#{int}
	</delete>

</mapper>